---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  name: garmservers.garm-operator.mercedes-benz.com
spec:
  group: garm-operator.mercedes-benz.com
  names:
    kind: GarmServer
    listKind: GarmServerList
    plural: garmservers
    singular: garmserver
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: GarmServer is the Schema for the garmservers API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: GarmServerSpec defines the desired state of GarmServer
            properties:
              api:
                properties:
                  bindAddress:
                    description: BindAddress - The address to bind the server to.
                    type: string
                  corsOrigins:
                    items:
                      type: string
                    type: array
                  port:
                    description: Port - The port to bind the server to.
                    type: integer
                  tls:
                    description: TLS - Parameters related to the TLS
                    properties:
                      certificate_bundle:
                        description: |-
                          CertificateBundle is the key in the secret that holds the certificate bundle.
                          The bundle needs to have the entire certificate chain, CA included.
                        type: string
                      name:
                        description: Name of the kubernetes secret to use
                        type: string
                      private_key:
                        description: PrivateKey is the key in the secret that holds
                          the private key.
                        type: string
                    required:
                    - certificate_bundle
                    - name
                    - private_key
                    type: object
                  useTLS:
                    type: boolean
                type: object
              containerImage:
                description: ContainerImage - GARM Container Image URL (will be set
                  to environmental default if empty)
                type: string
              database:
                properties:
                  backend:
                    description: BackendType - The database backend to use. Currently
                      only SQLite is supported.
                    enum:
                    - sqlite
                    type: string
                  debug:
                    type: boolean
                  passphraseSecretRef:
                    description: |-
                      PassphraseSecretRef - The secret name that holds the database encryption passphrase.
                      The passphrase is used to encrypt some values in the database at rest. Sensitive info
                      like credentials.
                    properties:
                      key:
                        description: Key is the key in the secret's data map for this
                          value
                        type: string
                      name:
                        description: Name of the kubernetes secret to use
                        type: string
                    required:
                    - key
                    - name
                    type: object
                  sqliteBackend:
                    description: |-
                      SQLiteBackend - Parameters related to the SQLite backend. Currently it's marked as required,
                      mostly because it's the only backend supported. In the future, this will be marked as optional.
                    properties:
                      databaseFileName:
                        type: string
                      persistentVolumeClaim:
                        description: PersistentVolumeClaimSpecs defines the web server
                          volume specs
                        properties:
                          createIfNotExists:
                            default: true
                            description: CreateIfNotExists defines if the persistent
                              volume claim should be created in case not found
                            type: boolean
                          mountPath:
                            description: MountPath defines the volume path inside
                              the web server
                            type: string
                          name:
                            description: Name of the persistent volume claim
                            type: string
                          storageClass:
                            default: default
                            description: StorageClass is the storageClassName used
                              to create a new persistent volume claim
                            type: string
                          storageSize:
                            default: 10Gi
                            description: StorageSize defines the size of the new persistent
                              volume claim
                            type: string
                        type: object
                    type: object
                type: object
              default:
                properties:
                  debugServer:
                    type: boolean
                  enableWebhookManagement:
                    type: boolean
                type: object
              jwt:
                properties:
                  jwtSecretRef:
                    properties:
                      key:
                        description: Key is the key in the secret's data map for this
                          value
                        type: string
                      name:
                        description: Name of the kubernetes secret to use
                        type: string
                    required:
                    - key
                    - name
                    type: object
                  timeToLive:
                    description: TimeToLive - The time to live in minutes for the
                      JWT token. Minimum is 30 minutes.
                    minimum: 30
                    type: integer
                type: object
              logging:
                properties:
                  enableLogStreamer:
                    type: boolean
                  logFormat:
                    enum:
                    - text
                    - json
                    type: string
                  logSource:
                    type: boolean
                type: object
              metrics:
                properties:
                  disableAuth:
                    type: boolean
                  enable:
                    type: boolean
                type: object
            required:
            - containerImage
            type: object
          status:
            description: GarmServerStatus defines the observed state of GarmServer
            properties:
              callbackURL:
                type: string
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              id:
                type: string
              metadataURL:
                type: string
              minimumJobAgeBackoff:
                type: integer
              version:
                type: string
              webhookURL:
                type: string
            required:
            - id
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
